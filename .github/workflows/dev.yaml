name: Dev Pipeline
on:
  push:
    branches:
      - dev
jobs:
  build-push:
    name: Build and push docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build using github cache
        uses: docker/build-push-action@v3
        with:
          load: true
          push: false
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:latest-dev
          cache-to: type=gha,mode=max
          cache-from: type=gha

      - name: Push the image to Amazon ECR
        run: docker push ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:latest-dev

  run-ecs-task:
    name: Run ECS task
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Run ecs task
        run: |
          aws ecs run-task \
            --cluster YarikScrapperDev \
            --launch-type FARGATE \
            --task-definition arn:aws:ecs:eu-central-1:432292721995:task-definition/YarikScrapperDev \
            --network-configuration "awsvpcConfiguration={subnets=[subnet-635af509,subnet-0fe10473,subnet-6f50b923],securityGroups=[sg-fceb3f98],assignPublicIp=ENABLED}"
